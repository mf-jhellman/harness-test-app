version: 2.1


######//////##############//////##############//////##############
#   FILTERS
######//////##############//////##############//////##############      

semver_regex: &semver_regex /^([Vv]?)((([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?)$/

release_branches: &release_branches_list
  - main

# Jobs with this filter only run for semver tag push, but not on branch push
release_tag_filter: &release_tag_filter
  filters:
    branches:
      ignore: /.*/
    tags:
      only: *semver_regex

# Any branch except the release branches
non_release_branch_filter: &non_release_branch_filter
  filters:
    branches:
      ignore: *release_branches_list

# Only release branches
release_branch_filter: &release_branch_filter
  filters:
    branches:
      only: *release_branches_list

######//////##############//////##############//////##############
#   OCTOPUS
######//////##############//////##############//////##############
octopus_environment_settings: &octopus_environment_settings
  api_key: "OCTOPUS_API_KEY"
  server:  "OCTOPUS_SERVER_URL"
  space: "Demo"

######//////##############//////##############//////##############
#   JOBS
######//////##############//////##############//////##############
jobs:
  build_image:
    docker:
      - image: cimg/go:1.17
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Image
          command: |
            VERSION=test-$(git rev-parse HEAD) 
            DOCKER_TAG="$DOCKERHUB_USERNAME/http-echo:$VERSION"
            DOCKER_TARGETS=alpine 
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            CGO_ENABLED="0"
            GOOS=linux
            GOARCH=amd64
            go build \
              -a \
              -o="pkg/linux_amd64/http-echo" \
              -ldflags "-s -w"
            docker build \
              --rm \
              --force-rm \
              --no-cache \
              --compress \
              --file="docker/alpine/Dockerfile" \
              --build-arg="LD_FLAGS=\"-s -w\"" \
              --tag="$DOCKER_TAG" \
              .
            echo "export DOCKER_TAG=${DOCKER_TAG}" >> $BASH_ENV
  test:
    docker: # executor type
      - image: cimg/base:stable
    steps: 
      - run:
          name: Run Tests
          command: | 
            true

  tag_image_for_deploy: 
    docker: # executor type
      - image: cimg/base:stable
    steps:
      - setup_remote_docker
      - run:
          name: Tag Image for Deployment
          command: |
            VERSION=test-$(git rev-parse HEAD) 
            DOCKER_TAG="$DOCKERHUB_USERNAME/http-echo:$VERSION"
            docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
            DOCKER_TAG_DEPLOY="${DOCKER_TAG}-deploy"
            docker pull ${DOCKER_TAG}
            docker tag ${DOCKER_TAG} ${DOCKER_TAG_DEPLOY}
            docker push ${DOCKER_TAG_DEPLOY}

######//////##############//////##############//////##############
#   WORKFLOWS
######//////##############//////##############//////##############

workflows:
  version: 2

  build_and_test:
    jobs:
      - build_image:
          context: 
            - DOCKERHUB
      - test:
          requires:
            - build_image
      - tag_image_for_deploy:
          context: 
            - DOCKERHUB
          requires:
            - test